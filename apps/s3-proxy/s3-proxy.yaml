kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"s3-proxy:latest","namespace":"s3-proxy"},"fieldPath":"spec.template.spec.containers[?(@.name==\"s3-proxy\")].image","pause":"false"}]
  name: s3-proxy
  labels:
    app: s3-proxy
    app.kubernetes.io/component: s3-proxy
    app.kubernetes.io/instance: s3-proxy
    app.kubernetes.io/name: s3-proxy
    app.kubernetes.io/part-of: s3-proxy
    app.openshift.io/runtime: s3-proxy
    app.openshift.io/runtime-namespace: s3-proxy
    app.openshift.io/runtime-version: latest
spec:
  replicas: 3
  selector:
    matchLabels:
      app: s3-proxy
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: s3-proxy
        deploymentconfig: s3-proxy
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - s3-proxy
              topologyKey: kubernetes.io/hostname
      containers:
        - name: s3-proxy
          image: 'image-registry.openshift-image-registry.svc:5000/s3-proxy/s3-proxy:latest'
          ports:
            - containerPort: 80
              protocol: TCP
          envFrom:
          - secretRef:
              name: nginx-settings
          resources:
            limits:
              cpu: '10m'
              memory: 100Mi
            requests:
              cpu: '1m'
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: client-temp
            mountPath: /var/cache/nginx/client_temp
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        runAsUser: 0
      serviceAccountName: nginx
      schedulerName: default-scheduler
      imagePullSecrets: []
      volumes:
      - name: client-temp
        emptyDir: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  paused: false
